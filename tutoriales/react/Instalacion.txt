INSTALAR UNA APP CON REACT

  - INSTALACIONES OBLIGATORIAS

    - NPM
      - npm install. Instala todas las dependencias
      - npm audit fix. Intenta reparar vulnerabilidades

    - NODE.JS
      - node.js se instala desde: https://nodejs.org/en/download
        - Ver si tengo instalado node.js y que version: node -v
    
    - GIT BASH
      - Se instala desde: https://git-scm.com/downloads
      - Integrar la terminal de gitbash en Visual studio code
      - Evitará tener que abrir git bash en otra ventana externa 
      - Ctrl + ñ muestra la consola
      - Ejecutar npm run start para ejecutar proyectos creados con create react app
      - Si el proyecto ha sido creado mediante vite ejecuto npm run dev

    - CREATE REACT APP

      - En la carpeta donde deseo crear la app ejecuto:
          - npx create-react-app nombre_de_la_aplicacion_sin_espacios_o_caracteres especiales.
          - Creará un archivo public/index.html que tendrá un div con un id llamado root y un src/index.js

        - Debo eliminar los archivos qe no valen
          - En la carperta src quedarán solo:
            - index.js
                - En el interior del archivo borro lo siguiente:
                    - los comentarios
                    - reportWebVitals()
                    - import reportWebVitals from './reportWebVitals';

            - app.css
              - Lo sustituyo por los mios

            - index.css
              - Los sustituyo por los mios
            
            - App.js
                - Borro su contenido y creo el mio
                - Importo lo que valla a ir necesitando:
                  - librerías necesarias
                    - import React from 'react';
                    - import styled from 'styled-components';
                    - import {useState} from 'react';
                  - Componentes
                  - Elementos
                  - css
                    - import './App.css';
                        
                  - Creo la estructura de la funcion ppal:
                      const App = () => {
                        return (
                          <div>
                            <h1>Hola mundo!!</h1>
                          </div>    
                        );
                      }
                      export default App;
                    
      - Modificaremos el archivo index.js mediante instruciones JSX situadas entre las etiquetas <React.StrictMode>
      - Mediante el método root.render mostrará el contenido en el navegador
      - Para ejecutar la app mediante consola entro en la carpeta de la app creada y ejecuto:
          - npm start   

      - Ver version actual: npx create-react-app --version
      - Actualizar a la última version: npx create-react-app@latest my-temprary-app

    - VITE

      - Instalo vitealar la app inical de VITE
          - 1.- npm create vite@latest
          - 2.- Instalo las depedencias iniciales mediante npm install
          - 3.- Ejecuto npm run dev y compruebo que la instalacion inicial de vite funciona
       
      - Pasar una aplicacion de create react app a vite:
          - 1.- Sobrescribo la carpeta src de la nueva app con la carpeta src de la vieja app
          - 2.- Copiar todas las dependencias de la vieja app al archivo package.json de la nueva app (dependences)
          - 3.- Cambio las extensiones de los archivos JAVASCRIPT de js a jsx
          - 4.- Vuelvo a ejecutar npm install para instalar las depedencias añadidas
          - 5.- En el archivo index.html en la etiqueta script debe apuntar al archivo correcto
          - 6.- Puede ser necesario instalar de nuevo algun paquete. Ej: uuid

      - Instalacion del plugin vite-plugin-svgr
          - Transforma imagenes svg en componentes
          - Comando: npm i vite-plugin-svgr
        
  - INSTALACIONES OPCIONALES (LIBRERIAS)

    - REACT ROUTER
      - Su web: https://reactrouter.com
          - Copiar en la consola: npm install react-router-dom

    - STYLED COMPONENTS
      - Su web: https://styled-components.com/
          - Ir a documentacion/basics/instalacion
          - Copiar en consola: npm install styled-components
      - Lo importo escribiendo: import styled from 'styled-components';

    - FIREBASE

      - Su web: https://firebase.google.com
      - Usaré la cuenta de oscarfernandezsantiago@gmail.com
      - Desde la web pinchar en "Comenzar" y seguir sus instrucciones
      - Podría añadir un servicio gratuito de google llamado google analytics
      - Podemos acceder a una consola de firebase con servicios que podemos agregar a  nuestro proyecto

      - Despues de hacer lo anterior podemos agregar el nucleo de firebase:
        - En la web selecciono </> y sigo las instrucciones:
          - Registro la app y añado el nombre. Escribo el mismo nombre con el que lo cree en visualStudio
          - Podría seleccionar si quiero configurar firebase hosting
          - Ejecuto npm install firebase en el proyecto
          - Creo la carpeta firebase dentro de src donde iría almacenando los archivos relacionados con firebase
          - Creo en su interior el archivo firebaseConfig.jsx y pego el codigo que me pide añadir firebase

      - Después de agregar el núcleo podremos añadir que servicios vamos a utilizar:      
        - Añado el servicio de Firestore Database

        - Creo la base de datos en la consola de firebase/Cloud Firestore
          - Me permite inicarla en modo de producción.
            - Implica modificar las reglas de seguridad asignando permisos de lectura y escritura

          - O crearla en modo de prueba de 30 días pudíendose modificar los días en las reglas
          - Indico que la ubicación es europa

          - Dentro de las colecciones contenemos un documento por cada dato insertado
            - Las colecciones equivalen a las tablas y los documentos a los registros.
            - Añadiré colecciones desde la consola de fireStorage y los documentos ya desde mi código.
            - Si añadiera documentos a una coleccion que no existe fireStore crea la colección
    
    - REDUX
      - Su web: https://redux.js.org/introduction/installation
      - Copiar en consola: npm install redux (Instalacion para JAVASCRIPT)
      - Copiar tambien: npm install react-redux (Instalacion para react)

    - ROLLUP  
      - Copiar en consola: npm install --save-dev rollup
    
    - FONTAWESOME
      - Su web: https://fontawesome.com/v5/docs/web/use-with/react#get-started
      
      - Hay varias formas de hacerlo:
        - Mediante un plan de react.
          - A mi no me ha funcionado por ahora.
          - Pasos:
            - Copiar en consola:
              - npm i --save @fortawesome/fontawesome-svg-core.
                - Aquí me da el error CODE E401. Incorrect or missing password.
              - npm install --save @fortawesome/free-solid-svg-icons.
                -  Instala iconos solidos.
              - npm install --save @fortawesome/react-fontawesome


    - UUID.
      - Paquete que permite generar ids únicos sin duplicados
          - Su web: https://www.npmjs.com/package/uuid
          - Instalar el paquete: npm install uuid
          - Importar el paquete: import { v4 as uuidv4 } from 'uuid';
          - LLamar a la funcion: uuidv4()

    - WEBFONTLOADER
      - Permite descargar y usar una fuente de google fonts
      - Instalar el paquete: npm i webfontloader
      
      - Copiar la siguiente estructura en main.jsx o index.jsx antes de llamar al componente ppal:
        - import WebFont from 'webfontloader';
        - WebFont.load({
              google: {
              families: ['nombre de la fuente a cargar:tamaño1, tamaño2, ...', 'nombre de la fuente a cargar si falla el primero']
            }
          });



  
  - EN LA APP APRENDIENDO REACT DESCRIBO LOS FUNDAMENTOS DE REACT
